package asgn2Tests;

import org.junit.Test;


import asgn2Exceptions.*;
import asgn2Pizzas.*;

import java.time.LocalTime;


/**
 * A class that that tests the asgn2Pizzas.MargheritaPizza, asgn2Pizzas.VegetarianPizza, asgn2Pizzas.MeatLoversPizza classes. 
 * Note that an instance of asgn2Pizzas.MeatLoversPizza should be used to test the functionality of the 
 * asgn2Pizzas.Pizza abstract class. 
 * 
 * @author Person B
 *
 */


public class PizzaTests {
	
	//Test Pizza constructor correctly parses values to margherita pizza 
	@Test
	public void TestPizzaConstructor_forMargherita_Correct() throws PizzaException{
		LocalTime orderTime = LocalTime.now();
		LocalTime deliverTime = LocalTime.now().plusMinutes(10);
		Pizza c = PizzaFactory.getPizza("PZM", 1, orderTime, deliverTime);
		assert(c instanceof MargheritaPizza);
	}
	
	//Test Pizza constructor doesn't create margherita pizza when different code is entered
	@Test
	public void TestPizzaConstructor_forMargherita_WrongCode() throws PizzaException{
		LocalTime orderTime = LocalTime.now();
		LocalTime deliverTime = LocalTime.now().plusMinutes(10);
		Pizza c = PizzaFactory.getPizza("PZV", 1, orderTime, deliverTime);
		assert!(c instanceof MargheritaPizza);
	}
	
	//Test Pizza constructor throws exception when delivery time is less than 10 mins (cooking time)
	@Test(expected = PizzaException.class)
	public void TestPizzaConstructor_tooShort() throws PizzaException{
		LocalTime orderTime = LocalTime.now();
		LocalTime deliverTime = LocalTime.now().plusMinutes(9);
		Pizza c = PizzaFactory.getPizza("PZM", 1, orderTime, deliverTime);
		assert(c instanceof MargheritaPizza);
	}
	
	//Test Pizza constructor throws exception when delivery time is more than 1 hr
	@Test(expected = PizzaException.class)
	public void TestPizzaConstructor_tooLong() throws PizzaException{
		LocalTime orderTime = LocalTime.now();
		LocalTime deliverTime = LocalTime.now().plusMinutes(65);
		Pizza c = PizzaFactory.getPizza("PZM", 1, orderTime, deliverTime);
		assert(c instanceof MargheritaPizza);
	}
	
	//Test Pizza constructor throws exception when no pizzas are ordered
	@Test(expected = PizzaException.class)
	public void TestPizzaConstructor_noPizza() throws PizzaException{
		LocalTime orderTime = LocalTime.now();
		LocalTime deliverTime = LocalTime.now().plusMinutes(15);
		Pizza c = PizzaFactory.getPizza("PZM", 0, orderTime, deliverTime);
		assert(c instanceof MargheritaPizza);
	}
	
	//Test Pizza constructor throws exception when more than 10 pizzas are ordered
	@Test(expected = PizzaException.class)
	public void TestPizzaConstructor_tooManyPizza() throws PizzaException{
		LocalTime orderTime = LocalTime.now();
		LocalTime deliverTime = LocalTime.now().plusMinutes(15);
		Pizza c = PizzaFactory.getPizza("PZM", 20, orderTime, deliverTime);
		assert(c instanceof MargheritaPizza);
	}
	
}
